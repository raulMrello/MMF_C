


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************
    2 00000000         ; * @file:    startup_MKL05Z4.s
    3 00000000         ; * @purpose: CMSIS Cortex-M0plus Core Device Startup Fi
                       le for the
    4 00000000         ; *           MKL05Z4
    5 00000000         ; * @version: 1.1
    6 00000000         ; * @date:    2012-6-21
    7 00000000         ; *
    8 00000000         ; * Copyright: 1997 - 2012 Freescale Semiconductor, Inc.
                        All Rights Reserved.
    9 00000000         ;*
   10 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   11 00000000         ; *
   12 00000000         ; ******************************************************
                       ***********************/
   13 00000000         
   14 00000000         
   15 00000000         ; <h> Stack Configuration
   16 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   17 00000000         ; </h>
   18 00000000         
   19 00000000 00000400 
                       Stack_Size
                               EQU              0x00000400
   20 00000000         
   21 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   22 00000000         Stack_Mem
                               SPACE            Stack_Size
   23 00000400         __initial_sp
   24 00000400         
   25 00000400         
   26 00000400         ; <h> Heap Configuration
   27 00000400         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   28 00000400         ; </h>
   29 00000400         
   30 00000400 00000400 
                       Heap_Size
                               EQU              0x00000400
   31 00000400         
   32 00000400                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   33 00000000         __heap_base
   34 00000000         Heap_Mem
                               SPACE            Heap_Size
   35 00000400         __heap_limit
   36 00000400         
   37 00000400         
   38 00000400                 PRESERVE8
   39 00000400                 THUMB
   40 00000400         
   41 00000400         
   42 00000400         ; Vector Table Mapped to Address 0 at Reset
   43 00000400                 AREA             RESET, DATA, READONLY
   44 00000000                 EXPORT           __Vectors
   45 00000000                 EXPORT           __Vectors_End
   46 00000000                 EXPORT           __Vectors_Size



ARM Macro Assembler    Page 2 


   47 00000000         
   48 00000000                 AREA             |.ARM.__at_0x00|, CODE, READONL
Y
   49 00000000         
   50 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   51 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   52 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   53 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   54 00000010 00000000        DCD              0           ; Reserved
   55 00000014 00000000        DCD              0           ; Reserved
   56 00000018 00000000        DCD              0           ; Reserved
   57 0000001C 00000000        DCD              0           ; Reserved
   58 00000020 00000000        DCD              0           ; Reserved
   59 00000024 00000000        DCD              0           ; Reserved
   60 00000028 00000000        DCD              0           ; Reserved
   61 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   62 00000030 00000000        DCD              0           ; Reserved
   63 00000034 00000000        DCD              0           ; Reserved
   64 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   65 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   66 00000040         
   67 00000040         ; External Interrupts
   68 00000040 00000000        DCD              DMA0_IRQHandler ; DMA channel 0
                                                             transfer complete/
                                                            error interrupt
   69 00000044 00000000        DCD              DMA1_IRQHandler ; DMA channel 1
                                                             transfer complete/
                                                            error interrupt
   70 00000048 00000000        DCD              DMA2_IRQHandler ; DMA channel 2
                                                             transfer complete/
                                                            error interrupt
   71 0000004C 00000000        DCD              DMA3_IRQHandler ; DMA channel 3
                                                             transfer complete/
                                                            error interrupt
   72 00000050 00000000        DCD              Reserved20_IRQHandler ; Reserve
                                                            d interrupt 20
   73 00000054 00000000        DCD              FTFA_IRQHandler ; FTFA command 
                                                            complete/read colli
                                                            sion interrupt
   74 00000058 00000000        DCD              LVD_LVW_IRQHandler ; Low Voltag
                                                            e Detect, Low Volta
                                                            ge Warning
   75 0000005C 00000000        DCD              LLW_IRQHandler ; Low Leakage Wa
                                                            keup
   76 00000060 00000000        DCD              I2C0_IRQHandler 
                                                            ; I2C0 interrupt
   77 00000064 00000000        DCD              Reserved_25_IRQHandler ; Reserv
                                                            ed interrupt 25
   78 00000068 00000000        DCD              SPI0_IRQHandler 
                                                            ; SPI0 interrupt
   79 0000006C 00000000        DCD              Reserved_27_IRQHandler ; Reserv
                                                            ed interrupt 27
   80 00000070 00000000        DCD              UART0_IRQHandler ; UART0 status
                                                             and error interrup



ARM Macro Assembler    Page 3 


                                                            t
   81 00000074 00000000        DCD              Reserved_29_IRQHandler ; Reserv
                                                            ed interrupt 29
   82 00000078 00000000        DCD              Reserved_30_IRQHandler ; Reserv
                                                            ed interrupt 30
   83 0000007C 00000000        DCD              ADC0_IRQHandler 
                                                            ; ADC0 interrupt
   84 00000080 00000000        DCD              CMP0_IRQHandler 
                                                            ; CMP0 interrupt
   85 00000084 00000000        DCD              TPM0_IRQHandler ; TPM0 fault, o
                                                            verflow and channel
                                                            s interrupt
   86 00000088 00000000        DCD              TPM1_IRQHandler ; TPM1 fault, o
                                                            verflow and channel
                                                            s interrupt
   87 0000008C 00000000        DCD              Reserved_35_IRQHandler ; Reserv
                                                            ed interrupt 35
   88 00000090 00000000        DCD              RTC_IRQHandler ; RTC interrupt
   89 00000094 00000000        DCD              RTC_Seconds_IRQHandler ; RTC se
                                                            conds interrupt
   90 00000098 00000000        DCD              PIT_IRQHandler ; PIT timer chan
                                                            nel 0 interrupt
   91 0000009C 00000000        DCD              Reserved_39_IRQHandler ; Reserv
                                                            ed interrupt 39
   92 000000A0 00000000        DCD              Reserved_40_IRQHandler ; Reserv
                                                            ed interrupt 40
   93 000000A4 00000000        DCD              DAC0_IRQHandler 
                                                            ; DAC0 interrupt
   94 000000A8 00000000        DCD              TSI0_IRQHandler 
                                                            ; TSI0 interrupt
   95 000000AC 00000000        DCD              MCG_IRQHandler ; MCG interrupt
   96 000000B0 00000000        DCD              LPTimer_IRQHandler 
                                                            ; LPTimer interrupt
                                                            
   97 000000B4 00000000        DCD              Reserved_45_IRQHandler ; Reserv
                                                            ed interrupt 45
   98 000000B8 00000000        DCD              PORTA_IRQHandler 
                                                            ; Port A interrupt
   99 000000BC 00000000        DCD              PORTD_IRQHandler 
                                                            ; Port D interrupt
  100 000000C0         __Vectors_End
  101 000000C0         
  102 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  103 000000C0         
  104 000000C0         ; <h> Flash Configuration
  105 000000C0         ;   <i> 16-byte flash configuration field that stores de
                       fault protection settings (loaded on reset)
  106 000000C0         ;   <i> and security information that allows the MCU to 
                       restrict acces to the FTFL module.
  107 000000C0         ;   <h> Backdoor Comparison Key
  108 000000C0         ;     <o0>  Backdoor Key 0  <0x0-0xFF:2>
  109 000000C0         ;     <o1>  Backdoor Key 1  <0x0-0xFF:2>
  110 000000C0         ;     <o2>  Backdoor Key 2  <0x0-0xFF:2>
  111 000000C0         ;     <o3>  Backdoor Key 3  <0x0-0xFF:2>
  112 000000C0         ;     <o4>  Backdoor Key 4  <0x0-0xFF:2>
  113 000000C0         ;     <o5>  Backdoor Key 5  <0x0-0xFF:2>
  114 000000C0         ;     <o6>  Backdoor Key 6  <0x0-0xFF:2>



ARM Macro Assembler    Page 4 


  115 000000C0         ;     <o7>  Backdoor Key 7  <0x0-0xFF:2>
  116 000000C0 000000FF 
                       BackDoorK0
                               EQU              0xFF
  117 000000C0 000000FF 
                       BackDoorK1
                               EQU              0xFF
  118 000000C0 000000FF 
                       BackDoorK2
                               EQU              0xFF
  119 000000C0 000000FF 
                       BackDoorK3
                               EQU              0xFF
  120 000000C0 000000FF 
                       BackDoorK4
                               EQU              0xFF
  121 000000C0 000000FF 
                       BackDoorK5
                               EQU              0xFF
  122 000000C0 000000FF 
                       BackDoorK6
                               EQU              0xFF
  123 000000C0 000000FF 
                       BackDoorK7
                               EQU              0xFF
  124 000000C0         ;   </h>
  125 000000C0         ;   <h> Program flash protection bytes (FPROT)
  126 000000C0         ;     <i> Each program flash region can be protected fro
                       m program and erase operation by setting the associated 
                       PROT bit.
  127 000000C0         ;     <i> Each bit protects a 1/32 region of the program
                        flash memory.
  128 000000C0         ;     <h> FPROT0
  129 000000C0         ;       <i> Program flash protection bytes
  130 000000C0         ;       <i> 1/32 - 8/32 region
  131 000000C0         ;       <o.0>   FPROT0.0
  132 000000C0         ;       <o.1>   FPROT0.1
  133 000000C0         ;       <o.2>   FPROT0.2
  134 000000C0         ;       <o.3>   FPROT0.3
  135 000000C0         ;       <o.4>   FPROT0.4
  136 000000C0         ;       <o.5>   FPROT0.5
  137 000000C0         ;       <o.6>   FPROT0.6
  138 000000C0         ;       <o.7>   FPROT0.7
  139 000000C0 00000000 
                       nFPROT0 EQU              0x00
  140 000000C0 000000FF 
                       FPROT0  EQU              nFPROT0:EOR:0xFF
  141 000000C0         ;     </h>
  142 000000C0         ;     <h> FPROT1
  143 000000C0         ;       <i> Program Flash Region Protect Register 1
  144 000000C0         ;       <i> 9/32 - 16/32 region
  145 000000C0         ;       <o.0>   FPROT1.0
  146 000000C0         ;       <o.1>   FPROT1.1
  147 000000C0         ;       <o.2>   FPROT1.2
  148 000000C0         ;       <o.3>   FPROT1.3
  149 000000C0         ;       <o.4>   FPROT1.4
  150 000000C0         ;       <o.5>   FPROT1.5
  151 000000C0         ;       <o.6>   FPROT1.6
  152 000000C0         ;       <o.7>   FPROT1.7



ARM Macro Assembler    Page 5 


  153 000000C0 00000000 
                       nFPROT1 EQU              0x00
  154 000000C0 000000FF 
                       FPROT1  EQU              nFPROT1:EOR:0xFF
  155 000000C0         ;     </h>
  156 000000C0         ;     <h> FPROT2
  157 000000C0         ;       <i> Program Flash Region Protect Register 2
  158 000000C0         ;       <i> 17/32 - 24/32 region
  159 000000C0         ;       <o.0>   FPROT2.0
  160 000000C0         ;       <o.1>   FPROT2.1
  161 000000C0         ;       <o.2>   FPROT2.2
  162 000000C0         ;       <o.3>   FPROT2.3
  163 000000C0         ;       <o.4>   FPROT2.4
  164 000000C0         ;       <o.5>   FPROT2.5
  165 000000C0         ;       <o.6>   FPROT2.6
  166 000000C0         ;       <o.7>   FPROT2.7
  167 000000C0 00000000 
                       nFPROT2 EQU              0x00
  168 000000C0 000000FF 
                       FPROT2  EQU              nFPROT2:EOR:0xFF
  169 000000C0         ;     </h>
  170 000000C0         ;     <h> FPROT3
  171 000000C0         ;       <i> Program Flash Region Protect Register 3
  172 000000C0         ;       <i> 25/32 - 32/32 region
  173 000000C0         ;       <o.0>   FPROT3.0
  174 000000C0         ;       <o.1>   FPROT3.1
  175 000000C0         ;       <o.2>   FPROT3.2
  176 000000C0         ;       <o.3>   FPROT3.3
  177 000000C0         ;       <o.4>   FPROT3.4
  178 000000C0         ;       <o.5>   FPROT3.5
  179 000000C0         ;       <o.6>   FPROT3.6
  180 000000C0         ;       <o.7>   FPROT3.7
  181 000000C0 00000000 
                       nFPROT3 EQU              0x00
  182 000000C0 000000FF 
                       FPROT3  EQU              nFPROT3:EOR:0xFF
  183 000000C0         ;     </h>
  184 000000C0         ;   </h>
  185 000000C0         ;   </h>
  186 000000C0         ;   <h> Flash nonvolatile option byte (FOPT)
  187 000000C0         ;     <i> Allows the user to customize the operation of 
                       the MCU at boot time.
  188 000000C0         ;     <o.0>  LPBOOT0
  189 000000C0         ;       <0=> Core and system clock divider (OUTDIV1) is 
                       0x7 (divide by 8) or 0x3 (divide by 4)
  190 000000C0         ;       <1=> Core and system clock divider (OUTDIV1) is 
                       0x1 (divide by 2) or 0x0 (divide by 1)
  191 000000C0         ;     <o.4>  LPBOOT1
  192 000000C0         ;       <0=> Core and system clock divider (OUTDIV1) is 
                       0x7 (divide by 8) or 0x1 (divide by 2)
  193 000000C0         ;       <1=> Core and system clock divider (OUTDIV1) is 
                       0x3 (divide by 4) or 0x0 (divide by 1)
  194 000000C0         ;     <o.2>  NMI_DIS
  195 000000C0         ;       <0=> NMI interrupts are always blocked
  196 000000C0         ;       <1=> NMI pin/interrupts reset default to enabled
                       
  197 000000C0         ;     <o.3>  RESET_PIN_CFG
  198 000000C0         ;       <0=> RESET pin is disabled following a POR and c
                       annot be enabled as RESET function



ARM Macro Assembler    Page 6 


  199 000000C0         ;       <1=> RESET pin is dedicated
  200 000000C0         ;     <o.3>  FAST_INIT
  201 000000C0         ;       <0=> Slower initialization
  202 000000C0         ;       <1=> Fast Initialization
  203 000000C0 000000FF 
                       FOPT    EQU              0xFF
  204 000000C0         ;   </h>
  205 000000C0         ;   <h> Flash security byte (FSEC)
  206 000000C0         ;     <i> WARNING: If SEC field is configured as "MCU se
                       curity status is secure" and MEEN field is configured as
                        "Mass erase is disabled",
  207 000000C0         ;     <i> MCU's security status cannot be set back to un
                       secure state since Mass erase via the debugger is blocke
                       d !!!
  208 000000C0         ;     <o.0..1> SEC
  209 000000C0         ;       <2=> MCU security status is unsecure
  210 000000C0         ;       <3=> MCU security status is secure
  211 000000C0         ;         <i> Flash Security
  212 000000C0         ;         <i> This bits define the security state of the
                        MCU.
  213 000000C0         ;     <o.2..3> FSLACC
  214 000000C0         ;       <2=> Freescale factory access denied
  215 000000C0         ;       <3=> Freescale factory access granted
  216 000000C0         ;         <i> Freescale Failure Analysis Access Code
  217 000000C0         ;         <i> This bits define the security state of the
                        MCU.
  218 000000C0         ;     <o.4..5> MEEN
  219 000000C0         ;       <2=> Mass erase is disabled
  220 000000C0         ;       <3=> Mass erase is enabled
  221 000000C0         ;         <i> Mass Erase Enable Bits
  222 000000C0         ;         <i> Enables and disables mass erase capability
                        of the FTFL module
  223 000000C0         ;     <o.6..7> KEYEN
  224 000000C0         ;       <2=> Backdoor key access enabled
  225 000000C0         ;       <3=> Backdoor key access disabled
  226 000000C0         ;         <i> Backdoor key Security Enable
  227 000000C0         ;         <i> These bits enable and disable backdoor key
                        access to the FTFL module.
  228 000000C0 000000FE 
                       FSEC    EQU              0xFE
  229 000000C0         ;   </h>
  230 000000C0         
  231 000000C0         
  232 000000C0                 IF               :LNOT::DEF:RAM_TARGET
  233 000000C0                 AREA             |.ARM.__at_0x400|, CODE, READON
LY
  234 00000000 FF FF FF 
              FF               DCB              BackDoorK0, BackDoorK1, BackDoo
rK2, BackDoorK3
  235 00000004 FF FF FF 
              FF               DCB              BackDoorK4, BackDoorK5, BackDoo
rK6, BackDoorK7
  236 00000008 FF FF FF 
              FF               DCB              FPROT0,     FPROT1,     FPROT2,
     FPROT3
  237 0000000C FE FF FF 
              FF               DCB              FSEC,       FOPT,       0xFF,  
   0xFF
  238 00000010                 ENDIF



ARM Macro Assembler    Page 7 


  239 00000010         
  240 00000010                 AREA             |.text|, CODE, READONLY
  241 00000000         
  242 00000000         ; Reset Handler
  243 00000000         
  244 00000000         Reset_Handler
                               PROC
  245 00000000                 EXPORT           Reset_Handler             [WEAK
]
  246 00000000                 IMPORT           SystemInit
  247 00000000                 IMPORT           __main
  248 00000000 4804            LDR              R0, =SystemInit
  249 00000002 4780            BLX              R0
  250 00000004 4804            LDR              R0, =__main
  251 00000006 4700            BX               R0
  252 00000008                 ENDP
  253 00000008         
  254 00000008         
  255 00000008         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  256 00000008         
  257 00000008         NMI_Handler
                               PROC
  258 00000008                 EXPORT           NMI_Handler               [WEAK
]
  259 00000008 E7FE            B                .
  260 0000000A                 ENDP
  262 0000000A         HardFault_Handler
                               PROC
  263 0000000A                 EXPORT           HardFault_Handler         [WEAK
]
  264 0000000A E7FE            B                .
  265 0000000C                 ENDP
  266 0000000C         SVC_Handler
                               PROC
  267 0000000C                 EXPORT           SVC_Handler               [WEAK
]
  268 0000000C E7FE            B                .
  269 0000000E                 ENDP
  270 0000000E         PendSV_Handler
                               PROC
  271 0000000E                 EXPORT           PendSV_Handler            [WEAK
]
  272 0000000E E7FE            B                .
  273 00000010                 ENDP
  274 00000010         SysTick_Handler
                               PROC
  275 00000010                 EXPORT           SysTick_Handler           [WEAK
]
  276 00000010 E7FE            B                .
  277 00000012                 ENDP
  278 00000012         
  279 00000012         Default_Handler
                               PROC
  280 00000012                 EXPORT           DMA0_IRQHandler     [WEAK]
  281 00000012                 EXPORT           DMA1_IRQHandler     [WEAK]
  282 00000012                 EXPORT           DMA2_IRQHandler     [WEAK]
  283 00000012                 EXPORT           DMA3_IRQHandler     [WEAK]
  284 00000012                 EXPORT           Reserved20_IRQHandler     [WEAK



ARM Macro Assembler    Page 8 


]
  285 00000012                 EXPORT           FTFA_IRQHandler     [WEAK]
  286 00000012                 EXPORT           LVD_LVW_IRQHandler     [WEAK]
  287 00000012                 EXPORT           LLW_IRQHandler     [WEAK]
  288 00000012                 EXPORT           I2C0_IRQHandler     [WEAK]
  289 00000012                 EXPORT           Reserved_25_IRQHandler     [WEA
K]
  290 00000012                 EXPORT           SPI0_IRQHandler     [WEAK]
  291 00000012                 EXPORT           Reserved_27_IRQHandler     [WEA
K]
  292 00000012                 EXPORT           UART0_IRQHandler     [WEAK]
  293 00000012                 EXPORT           Reserved_29_IRQHandler     [WEA
K]
  294 00000012                 EXPORT           Reserved_30_IRQHandler     [WEA
K]
  295 00000012                 EXPORT           ADC0_IRQHandler     [WEAK]
  296 00000012                 EXPORT           CMP0_IRQHandler     [WEAK]
  297 00000012                 EXPORT           TPM0_IRQHandler     [WEAK]
  298 00000012                 EXPORT           TPM1_IRQHandler     [WEAK]
  299 00000012                 EXPORT           Reserved_35_IRQHandler     [WEA
K]
  300 00000012                 EXPORT           RTC_IRQHandler     [WEAK]
  301 00000012                 EXPORT           RTC_Seconds_IRQHandler     [WEA
K]
  302 00000012                 EXPORT           PIT_IRQHandler     [WEAK]
  303 00000012                 EXPORT           Reserved_39_IRQHandler     [WEA
K]
  304 00000012                 EXPORT           Reserved_40_IRQHandler     [WEA
K]
  305 00000012                 EXPORT           DAC0_IRQHandler     [WEAK]
  306 00000012                 EXPORT           TSI0_IRQHandler     [WEAK]
  307 00000012                 EXPORT           MCG_IRQHandler     [WEAK]
  308 00000012                 EXPORT           LPTimer_IRQHandler     [WEAK]
  309 00000012                 EXPORT           Reserved_45_IRQHandler     [WEA
K]
  310 00000012                 EXPORT           PORTA_IRQHandler     [WEAK]
  311 00000012                 EXPORT           PORTD_IRQHandler     [WEAK]
  312 00000012                 EXPORT           DefaultISR                     
 [WEAK]
  313 00000012         
  314 00000012         DMA0_IRQHandler
  315 00000012         DMA1_IRQHandler
  316 00000012         DMA2_IRQHandler
  317 00000012         DMA3_IRQHandler
  318 00000012         Reserved20_IRQHandler
  319 00000012         FTFA_IRQHandler
  320 00000012         LVD_LVW_IRQHandler
  321 00000012         LLW_IRQHandler
  322 00000012         I2C0_IRQHandler
  323 00000012         Reserved_25_IRQHandler
  324 00000012         SPI0_IRQHandler
  325 00000012         Reserved_27_IRQHandler
  326 00000012         UART0_IRQHandler
  327 00000012         Reserved_29_IRQHandler
  328 00000012         Reserved_30_IRQHandler
  329 00000012         ADC0_IRQHandler
  330 00000012         CMP0_IRQHandler
  331 00000012         TPM0_IRQHandler
  332 00000012         TPM1_IRQHandler



ARM Macro Assembler    Page 9 


  333 00000012         Reserved_35_IRQHandler
  334 00000012         RTC_IRQHandler
  335 00000012         RTC_Seconds_IRQHandler
  336 00000012         PIT_IRQHandler
  337 00000012         Reserved_39_IRQHandler
  338 00000012         Reserved_40_IRQHandler
  339 00000012         DAC0_IRQHandler
  340 00000012         TSI0_IRQHandler
  341 00000012         MCG_IRQHandler
  342 00000012         LPTimer_IRQHandler
  343 00000012         Reserved_45_IRQHandler
  344 00000012         PORTA_IRQHandler
  345 00000012         PORTD_IRQHandler
  346 00000012         DefaultISR
  347 00000012         
  348 00000012 E7FE            B                .
  349 00000014         
  350 00000014                 ENDP
  351 00000014         
  352 00000014         
  353 00000014                 ALIGN
  354 00000014         
  355 00000014         
  356 00000014         ; User Initial Stack & Heap
  357 00000014         
  358 00000014                 IF               :DEF:__MICROLIB
  359 00000014         
  360 00000014                 EXPORT           __initial_sp
  361 00000014                 EXPORT           __heap_base
  362 00000014                 EXPORT           __heap_limit
  363 00000014         
  364 00000014                 ELSE
  378                          ENDIF
  379 00000014         
  380 00000014         
  381 00000014                 END
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=inter
work --depend=.\out\startup_mkl05z4.d -o.\out\startup_mkl05z4.o -IC:\Keil_v5\AR
M\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Freescale\Kineti
s --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 514" --li
st=.\out\startup_mkl05z4.lst ..\..\..\src\cpu\startup_MKL05Z4.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 21 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 22 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 23 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 50 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 360 in file ..\..\..\src\cpu\startup_MKL05Z4.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 32 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 34 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 33 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 361 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: __heap_base used once
__heap_limit 00000400

Symbol: __heap_limit
   Definitions
      At line 35 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 362 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 43 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      None
Comment: RESET unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x00 00000000

Symbol: .ARM.__at_0x00
   Definitions
      At line 48 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      None
Comment: .ARM.__at_0x00 unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 50 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 44 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 102 in file ..\..\..\src\cpu\startup_MKL05Z4.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 100 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 45 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 102 in file ..\..\..\src\cpu\startup_MKL05Z4.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x400 00000000

Symbol: .ARM.__at_0x400
   Definitions
      At line 233 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      None
Comment: .ARM.__at_0x400 unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 240 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      None
Comment: .text unused
ADC0_IRQHandler 00000012

Symbol: ADC0_IRQHandler
   Definitions
      At line 329 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 83 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 295 in file ..\..\..\src\cpu\startup_MKL05Z4.s

CMP0_IRQHandler 00000012

Symbol: CMP0_IRQHandler
   Definitions
      At line 330 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 84 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 296 in file ..\..\..\src\cpu\startup_MKL05Z4.s

DAC0_IRQHandler 00000012

Symbol: DAC0_IRQHandler
   Definitions
      At line 339 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 93 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 305 in file ..\..\..\src\cpu\startup_MKL05Z4.s

DMA0_IRQHandler 00000012

Symbol: DMA0_IRQHandler
   Definitions
      At line 314 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 68 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 280 in file ..\..\..\src\cpu\startup_MKL05Z4.s

DMA1_IRQHandler 00000012

Symbol: DMA1_IRQHandler
   Definitions
      At line 315 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 69 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 281 in file ..\..\..\src\cpu\startup_MKL05Z4.s

DMA2_IRQHandler 00000012

Symbol: DMA2_IRQHandler
   Definitions
      At line 316 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 70 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 282 in file ..\..\..\src\cpu\startup_MKL05Z4.s

DMA3_IRQHandler 00000012

Symbol: DMA3_IRQHandler
   Definitions
      At line 317 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 71 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 283 in file ..\..\..\src\cpu\startup_MKL05Z4.s

DefaultISR 00000012

Symbol: DefaultISR
   Definitions
      At line 346 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 312 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: DefaultISR used once
Default_Handler 00000012

Symbol: Default_Handler
   Definitions
      At line 279 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      None
Comment: Default_Handler unused
FTFA_IRQHandler 00000012

Symbol: FTFA_IRQHandler
   Definitions
      At line 319 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 73 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 285 in file ..\..\..\src\cpu\startup_MKL05Z4.s

HardFault_Handler 0000000A

Symbol: HardFault_Handler
   Definitions
      At line 262 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 53 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 263 in file ..\..\..\src\cpu\startup_MKL05Z4.s

I2C0_IRQHandler 00000012

Symbol: I2C0_IRQHandler
   Definitions
      At line 322 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 76 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 288 in file ..\..\..\src\cpu\startup_MKL05Z4.s

LLW_IRQHandler 00000012

Symbol: LLW_IRQHandler
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 321 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 75 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 287 in file ..\..\..\src\cpu\startup_MKL05Z4.s

LPTimer_IRQHandler 00000012

Symbol: LPTimer_IRQHandler
   Definitions
      At line 342 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 96 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 308 in file ..\..\..\src\cpu\startup_MKL05Z4.s

LVD_LVW_IRQHandler 00000012

Symbol: LVD_LVW_IRQHandler
   Definitions
      At line 320 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 74 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 286 in file ..\..\..\src\cpu\startup_MKL05Z4.s

MCG_IRQHandler 00000012

Symbol: MCG_IRQHandler
   Definitions
      At line 341 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 95 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 307 in file ..\..\..\src\cpu\startup_MKL05Z4.s

NMI_Handler 00000008

Symbol: NMI_Handler
   Definitions
      At line 257 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 52 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 258 in file ..\..\..\src\cpu\startup_MKL05Z4.s

PIT_IRQHandler 00000012

Symbol: PIT_IRQHandler
   Definitions
      At line 336 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 90 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 302 in file ..\..\..\src\cpu\startup_MKL05Z4.s

PORTA_IRQHandler 00000012

Symbol: PORTA_IRQHandler
   Definitions
      At line 344 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 98 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 310 in file ..\..\..\src\cpu\startup_MKL05Z4.s




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

PORTD_IRQHandler 00000012

Symbol: PORTD_IRQHandler
   Definitions
      At line 345 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 99 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 311 in file ..\..\..\src\cpu\startup_MKL05Z4.s

PendSV_Handler 0000000E

Symbol: PendSV_Handler
   Definitions
      At line 270 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 64 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 271 in file ..\..\..\src\cpu\startup_MKL05Z4.s

RTC_IRQHandler 00000012

Symbol: RTC_IRQHandler
   Definitions
      At line 334 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 88 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 300 in file ..\..\..\src\cpu\startup_MKL05Z4.s

RTC_Seconds_IRQHandler 00000012

Symbol: RTC_Seconds_IRQHandler
   Definitions
      At line 335 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 89 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 301 in file ..\..\..\src\cpu\startup_MKL05Z4.s

Reserved20_IRQHandler 00000012

Symbol: Reserved20_IRQHandler
   Definitions
      At line 318 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 72 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 284 in file ..\..\..\src\cpu\startup_MKL05Z4.s

Reserved_25_IRQHandler 00000012

Symbol: Reserved_25_IRQHandler
   Definitions
      At line 323 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 77 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 289 in file ..\..\..\src\cpu\startup_MKL05Z4.s

Reserved_27_IRQHandler 00000012

Symbol: Reserved_27_IRQHandler
   Definitions
      At line 325 in file ..\..\..\src\cpu\startup_MKL05Z4.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 79 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 291 in file ..\..\..\src\cpu\startup_MKL05Z4.s

Reserved_29_IRQHandler 00000012

Symbol: Reserved_29_IRQHandler
   Definitions
      At line 327 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 81 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 293 in file ..\..\..\src\cpu\startup_MKL05Z4.s

Reserved_30_IRQHandler 00000012

Symbol: Reserved_30_IRQHandler
   Definitions
      At line 328 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 82 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 294 in file ..\..\..\src\cpu\startup_MKL05Z4.s

Reserved_35_IRQHandler 00000012

Symbol: Reserved_35_IRQHandler
   Definitions
      At line 333 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 87 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 299 in file ..\..\..\src\cpu\startup_MKL05Z4.s

Reserved_39_IRQHandler 00000012

Symbol: Reserved_39_IRQHandler
   Definitions
      At line 337 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 91 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 303 in file ..\..\..\src\cpu\startup_MKL05Z4.s

Reserved_40_IRQHandler 00000012

Symbol: Reserved_40_IRQHandler
   Definitions
      At line 338 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 92 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 304 in file ..\..\..\src\cpu\startup_MKL05Z4.s

Reserved_45_IRQHandler 00000012

Symbol: Reserved_45_IRQHandler
   Definitions
      At line 343 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 97 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 309 in file ..\..\..\src\cpu\startup_MKL05Z4.s

Reset_Handler 00000000



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols


Symbol: Reset_Handler
   Definitions
      At line 244 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 51 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 245 in file ..\..\..\src\cpu\startup_MKL05Z4.s

SPI0_IRQHandler 00000012

Symbol: SPI0_IRQHandler
   Definitions
      At line 324 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 78 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 290 in file ..\..\..\src\cpu\startup_MKL05Z4.s

SVC_Handler 0000000C

Symbol: SVC_Handler
   Definitions
      At line 266 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 61 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 267 in file ..\..\..\src\cpu\startup_MKL05Z4.s

SysTick_Handler 00000010

Symbol: SysTick_Handler
   Definitions
      At line 274 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 65 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 275 in file ..\..\..\src\cpu\startup_MKL05Z4.s

TPM0_IRQHandler 00000012

Symbol: TPM0_IRQHandler
   Definitions
      At line 331 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 85 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 297 in file ..\..\..\src\cpu\startup_MKL05Z4.s

TPM1_IRQHandler 00000012

Symbol: TPM1_IRQHandler
   Definitions
      At line 332 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 86 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 298 in file ..\..\..\src\cpu\startup_MKL05Z4.s

TSI0_IRQHandler 00000012

Symbol: TSI0_IRQHandler
   Definitions
      At line 340 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

      At line 94 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 306 in file ..\..\..\src\cpu\startup_MKL05Z4.s

UART0_IRQHandler 00000012

Symbol: UART0_IRQHandler
   Definitions
      At line 326 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 80 in file ..\..\..\src\cpu\startup_MKL05Z4.s
      At line 292 in file ..\..\..\src\cpu\startup_MKL05Z4.s

41 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BackDoorK0 000000FF

Symbol: BackDoorK0
   Definitions
      At line 116 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 234 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: BackDoorK0 used once
BackDoorK1 000000FF

Symbol: BackDoorK1
   Definitions
      At line 117 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 234 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: BackDoorK1 used once
BackDoorK2 000000FF

Symbol: BackDoorK2
   Definitions
      At line 118 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 234 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: BackDoorK2 used once
BackDoorK3 000000FF

Symbol: BackDoorK3
   Definitions
      At line 119 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 234 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: BackDoorK3 used once
BackDoorK4 000000FF

Symbol: BackDoorK4
   Definitions
      At line 120 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 235 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: BackDoorK4 used once
BackDoorK5 000000FF

Symbol: BackDoorK5
   Definitions
      At line 121 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 235 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: BackDoorK5 used once
BackDoorK6 000000FF

Symbol: BackDoorK6
   Definitions
      At line 122 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 235 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: BackDoorK6 used once
BackDoorK7 000000FF

Symbol: BackDoorK7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 123 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 235 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: BackDoorK7 used once
FOPT 000000FF

Symbol: FOPT
   Definitions
      At line 203 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 237 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: FOPT used once
FPROT0 000000FF

Symbol: FPROT0
   Definitions
      At line 140 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 236 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: FPROT0 used once
FPROT1 000000FF

Symbol: FPROT1
   Definitions
      At line 154 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 236 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: FPROT1 used once
FPROT2 000000FF

Symbol: FPROT2
   Definitions
      At line 168 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 236 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: FPROT2 used once
FPROT3 000000FF

Symbol: FPROT3
   Definitions
      At line 182 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 236 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: FPROT3 used once
FSEC 000000FE

Symbol: FSEC
   Definitions
      At line 228 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 237 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: FSEC used once
Heap_Size 00000400

Symbol: Heap_Size
   Definitions
      At line 30 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 34 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: Heap_Size used once
Stack_Size 00000400

Symbol: Stack_Size
   Definitions
      At line 19 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 22 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: Stack_Size used once
__Vectors_Size 000000C0

Symbol: __Vectors_Size
   Definitions
      At line 102 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 46 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: __Vectors_Size used once
nFPROT0 00000000

Symbol: nFPROT0
   Definitions
      At line 139 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 140 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: nFPROT0 used once
nFPROT1 00000000

Symbol: nFPROT1
   Definitions
      At line 153 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 154 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: nFPROT1 used once
nFPROT2 00000000

Symbol: nFPROT2
   Definitions
      At line 167 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 168 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: nFPROT2 used once
nFPROT3 00000000

Symbol: nFPROT3
   Definitions
      At line 181 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 182 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: nFPROT3 used once
21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 246 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 248 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: SystemInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 247 in file ..\..\..\src\cpu\startup_MKL05Z4.s
   Uses
      At line 250 in file ..\..\..\src\cpu\startup_MKL05Z4.s
Comment: __main used once
2 symbols
412 symbols in table
